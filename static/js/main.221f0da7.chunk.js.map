{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Debits.js","components/Credits.js","App.js","serviceWorker.js","index.js"],"names":["AccountBalance","this","props","accountBalance","toFixed","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debits","componentDidMount","fetchDebit","d","Date","month","getMonth","day","getDate","year","getFullYear","length","today","join","todayDate","newDeb","axios","get","then","res","data","console","log","dataArr","catch","err","handleSubmitDebit","event","newDebit","forEach","description","input","newObj","Object","assign","date","amount","handleAmount","debitAmount","map","substring","Credits","fetchCredit","newCre","creData","handleSubmitCredit","newCredit","display","placeholder","onClick","App","handleDebit","newAmount","handleCredit","currentUser","exact","path","render","debit","credit","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.221f0da7.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  render() {\n    return (\n        <div>\n         Balance: ${this.props.accountBalance.toFixed(2)}\n        </div>\n    );\n  }\n}\n\nexport default AccountBalance;","import React, { Component } from 'react';\nimport AccountBalance from './AccountBalance'\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n        <div>\n          <img src=\"https://letstalkpayments.com/wp-content/uploads/2016/04/Bank.png\" alt=\"bank\"/>\n          <h1>Bank of React</h1>\n          <strong><AccountBalance accountBalance = {this.props.accountBalance}/> </strong>\n          <div><Link to = \"/\"></Link></div>\n          <div><Link to = \"/UserProfile\">User Profile</Link></div>\n          <div><Link to = \"/Login\">Log In</Link></div>\n          <div><Link to = \"/Debits\">Debits</Link></div>\n          <div><Link to = \"/Credits\">Credits</Link></div>\n        </div>\n    );\n  }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n \n  render() {\n    return (\n        <div>\n          <h1>User Profile</h1>\n          <Link to = \"/\">Home</Link>\n          <p></p>\n          <div>Username: {this.props.userName}</div>\n          <div>Member Since: {this.props.memberSince}</div>\n        </div>\n    );\n  }\n}\n\nexport default UserProfile;","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor () {\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n\n  render () {\n    if (this.state.redirect) {\n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    return (\n      <div>\n        <h1>Log In</h1>\n        <Link to = \"/\">Home</Link>\n        <p></p>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","import React, { Component } from 'react';\nimport AccountBalance from './AccountBalance'\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\nclass Debits extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      debitAmount: null,\n      dataArr: [],\n      input: \"\",\n      todayDate: \"\",\n      newDebit: 0,\n      accountBalance: 0,\n    }\n    \n  }\n  // Calls the API when component is mounted\n  componentDidMount = () =>{\n    this.fetchDebit();\n    \n    // Get today's date into yyyy-mm-dd format\n    let d = new Date(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n    const today = [year, month, day].join('-');\n    this.setState({todayDate: today});\n    this.props.newDeb(320.34)\n  }\n\n  // Fetches the API and restore it into dataArr\n  fetchDebit = () => {\n\n    axios.get(`https://moj-api.herokuapp.com/debits`)\n    .then ((res) => {\n      const data = res.data;\n      console.log(data);\n      this.setState({ dataArr: data})\n    })\n    .catch((err) => console.log(err));\n  }\n  \n  handleSubmitDebit = (event) => {\n    event.preventDefault();\n    this.props.newDeb(this.state.newDebit);\n    console.log(this.state.newDebit);\n    this.state.dataArr.forEach( (data) => { \n     \n      if(data.description !== this.state.input) {\n        let newObj = Object.assign({}, data); \n        newObj.date = this.state.todayDate;\n        newObj.description = this.state.input; \n        this.props.newDeb(newObj.amount);\n        this.setState({\n          dataArr: [newObj, ...this.state.dataArr],\n          input: \"\",\n        });\n        newObj.amount = this.state.newDebit;\n      }\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({ input: event.target.value});\n  }\n  handleAmount = (event) => {\n    this.setState({ newDebit: event.target.value});\n  }\n  render() {\n    const display = this.state.dataArr.map( (data) => {\n      return (\n        <div>\n        <li>Description: {data.description}</li>\n        <p>Debit: ${data.amount}</p> \n        <p>At date: {data.date.substring(0, 10)}</p>\n        </div>\n      ) \n    })\n    return (\n      //newObj.date\n        <div>\n          <h1>Debits: </h1>\n          <a>Today's Date: {this.state.todayDate}</a>\n          <p></p>\n          <div><Link to = \"/\" >Home</Link></div>\n          \n          <form onSubmit={this.handleSubmitDebit}>\n          <p></p>\n          <strong><AccountBalance accountBalance={this.props.accountBalance}/> </strong>\n          <p></p>\n          <input type=\"text\" name=\"newDebit\" placeholder = \"Enter Description Here \" onChange = {this.handleChange} />\n         \n          <input type=\"text\" name=\"newDebit\" placeholder = \"Enter Amount Here \" onChange={this.handleAmount}/>\n          <button onChange = {this.handleAmount} onClick = {this.handleSubmitDebit}>Add Debit</button>\n\n           </form>\n          <p></p>\n          <div><ul>{display}</ul></div>\n        </div>\n    );\n  }\n}\nexport default Debits;","import React, { Component } from 'react';\nimport AccountBalance from './AccountBalance'\nimport {Link} from 'react-router-dom';\nimport axios from 'axios'\n\n\nclass Credits extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      newCredit: 0,\n      creData: [],\n      todayDate: \"\",\n      accountBalance: 0,\n    }\n  }\n  componentDidMount = () => {\n    this.fetchCredit();\n\n    // Get today's date into yyyy-mm-dd format\n    let d = new Date(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n    const today = [year, month, day].join('-');\n    this.setState({todayDate: today});\n    this.props.newCre(-500)\n  }\n  fetchCredit = () => {\n    // fetch to credit API\n    axios.get(`https://moj-api.herokuapp.com/credits`)\n    .then ((res) => {\n      const data = res.data;\n      console.log(data);\n      this.setState({ creData: data})\n    })\n    .catch((err) => console.log(err));\n  }\n\n  // handles when submit button is clicked\n  handleSubmitCredit = (event) => {\n    event.preventDefault();\n    \n    console.log(this.state.newCredit)\n    \n    this.state.creData.map( (data) => { \n      this.props.newCre(this.state.newCredit);\n      // if(data.description !== this.state.input) {\n        let newObj = Object.assign({}, data); \n        newObj.date = this.state.todayDate;\n        newObj.description = this.state.input; \n        newObj.amount = this.state.newCredit;\n        this.setState({\n          creData: [newObj, ...this.state.creData],\n          input: \"\",\n        });\n        this.props.newCre(newObj.amount);\n      // }\n    });\n    this.props.newCre(this.state.newCredit);\n  }\n\n  // when description input box has been entered\n  handleChange = (event) => {\n    this.setState({ input: event.target.value});\n  }\n\n  //// when amount input box has been entered\n  handleAmount = (event) => {\n    this.setState({ newCredit: event.target.value});\n  }\n\n \n  render(){\n\n    const display = this.state.creData.map((data) => {\n      return(\n      <div>\n        <div>\n        <li>Transaction: {data.description}</li>\n        <p>Credit: ${data.amount}</p>\n        <p>At date: {data.date.substring(0, 10)}</p>\n        </div>\n        </div>\n      )\n    })\n    return(\n      <div> \n        <h1>Credits</h1>\n        <p></p>\n        <a>Today's Date: {this.state.todayDate}</a>\n        <p></p>\n        <div><Link to = \"/\" >Home</Link></div>\n        <p></p>\n          <p></p>\n          <form onSubmit = {this.handleSubmitCredit}>\n          <p></p>\n          <strong><AccountBalance accountBalance={this.props.accountBalance}/> </strong>\n          <p></p>\n          <input type=\"text\" name=\"newDebit\" placeholder = \"Enter Description Here \" onChange={this.handleChange} />\n          <input type=\"text\" name=\"newDebit\" placeholder = \"Enter Amount Here \" onChange={this.handleAmount} />\n          <button onClick={this.handleSubmitCredit}>Add Credit</button>\n           </form> \n          <p></p>\n          <div><ul>{display}</ul></div>\n      </div>\n    \n    )\n  }\n}\n\nexport default Credits;","import React, {Component} from 'react';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Debits from './components/Debits';\nimport Credits from './components/Credits';\nimport AccountBalance from './components/AccountBalance';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      accountBalance: 14568.27,\n      currentUser: {\n        userName: 'bob_loblaw',\n        memberSince: '08/23/99',\n      },\n      newCredit: 0,\n      newDebit: 0,\n      newAmount: 0,\n    }\n  }\n\nhandleDebit = (amount) => {\n        this.setState({\n          newAmount: amount,\n          accountBalance: this.state.accountBalance - this.state.newAmount,\n        });\n}\n\nhandleCredit = (amount) => {\n  this.setState({\n    newAmount: amount,\n    accountBalance: this.state.accountBalance - this.state.newAmount,\n  })\n}\n  \n  render() {\n    const HomeComponent = () => (\n    <Home accountBalance = {this.state.accountBalance} />\n    )\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}/>\n  );\n\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} {...this.props}/>)\n    \n    const CreditComponent = () => (\n      <div>\n      <Credits \n      credit = {this.state.newCredit} \n      newCre = {this.handleCredit} \n      accountBalance = {this.state.accountBalance}\n      />\n      </div>\n    )\n\n    const DebitComponent = () => (\n      <Debits \n      debit = {this.state.newDebit} \n      newDeb = {this.handleDebit}\n      accountBalance = {this.state.accountBalance}\n      />\n      )\n    return (\n        <Router>\n          <Switch>\n            <Route exact path = \"/\" render={HomeComponent}/>\n            <Route exact path = \"/UserProfile\" render ={UserProfileComponent} />\n            <Route exact path = \"/Login\" render = {LogInComponent}/>\n            <Route exact path = \"/Debits\" render = {DebitComponent}/>\n            <Route exact path = \"/Credits\" render = {CreditComponent} />\n          </Switch> \n        </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}